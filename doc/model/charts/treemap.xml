<?xml version="1.0" encoding="UTF-8"?>
<c:model
    xmlns:c="urn:webdetails/com/2012"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:webdetails/com/2012 ../../schema/com_2012.xsd"
    xmlns="http://www.w3.org/1999/xhtml">

    <c:complexType name="TreemapChart"
                   space="pvc.options.charts"
                   base="pvc.options.charts.Chart"
                   facets="pvc.options.charts.MultiChartFacet">
        <c:documentation>
            The options documentation class of the <b>Treemap</b> chart.

            Treemap charts display hierarchical data using nested rectangles.
            They excel in revealing the location of valuable areas buried in a deep hierarchy.

            <p>
            The root data node is represented by the root rectangle,
            which occupies the whole plot area.
            </p>
            <p>
            The area of a leaf node is proportional to
            the percentage of the <i>size</i> dimension over its sibling nodes.
            The area of a non-leaf node is the sum of the areas of its child nodes.
            If no <i>size</i> dimension is specified,
            then all sibling-leaf nodes will have identical areas.
            </p>
            <p>
            Rectangles are usually colored so that siblings have the same color.
            This way, it is easy to identify sibling nodes and compare their relative sizes.
            In this way, the colors that are shown are the colors of leaf nodes' parents.
           </p>

            <h3>Default Data Format</h3>

            For general information on the supported <b>data formats</b>
            see <c:link to="pvc.options.charts.BasicChart" />.

            The treemap chart employs a non-default <i>logical row</i> to dimensions mapping:
            <ol>
                <li>
                    All of the free <i>discrete</i> columns of the <i>logical table</i>
                    generate and load free dimensions of the "category" <i>dimension group</i>:
                    "category", "category2", "category4", ...
                </li>
                <li>The first free <i>continuous</i> column of the <i>logical table</i>
                    generates and loads the "size" dimension, if free.
                </li>
            </ol>

            <style>
            .dataformat {
                border-spacing: 0;
                margin: 1em 0;
            }
            .dataformat td {
                border:  solid 1px;
                padding: 3px;
                width:   80px;
            }
            </style>

            The following is a possible default layout and dimension assignment:

            <table class="dataformat">
                <tr><td><b>Index</b></td><td>0</td><td>1</td><td>2</td><td>3</td></tr>
                <tr><td><b>Dimension</b></td><td>category</td><td>category2</td><td>category4</td><td>size</td></tr>
                <tr><td><b>DataType</b></td><td>string</td><td>string</td><td>string</td><td>number</td></tr>
            </table>

            Note that the dimension "category3" was not assigned to index 3, hypothetically because it was not free (was explicitly bound to some index, using a reader).

            <h3>How To Bind The Color Visual Role</h3>
            The Treemap's <tt>color</tt> visual role can only be bound to discrete dimensions.

            By default, the <tt>color</tt> role is bound to the
            dimensions of the <tt>category</tt> role â€” its default <i>source role</i>.

            The <tt>color</tt> role can also be bound to other discrete dimension(s), explicitly.

            <h4>Solution 1</h4>
            One possibility is to <i>switch</i> one of the automatically fed "category" dimensions
            to the <tt>color</tt> visual role.
            For example:
            <pre>
categoryRole: "category", // steal one here
colorRole:    "category2" // and assign it here
</pre>

            <h4>Solution 2</h4>
            Another possibility is to configure the <c:link to="pvc.options.charts.BasicChart#readers" />
            with the actual layout, using the default dimension names of
            the desired visual roles.
            For example:
            <pre>
readers: "color, category, category2, size"
</pre>

            <h4>Solution 3</h4>
            Of course, you can (and probably should) use actual business names for the names of dimensions.
            To that end, both the readers and the visual roles' mappings need to be specified:
            <pre>
readers:      "orderType, productFamily, productType, sales"
categoryRole: "productFamily, productType",
colorRole:    "orderType",
sizeRole:     "sales"
</pre>

            <h3></h3>
        </c:documentation>

        <c:property name="categoryRole" type="string pvc.options.VisualRole" category="Chart > Visual Roles">
            <c:documentation>
                The <tt>category</tt> visual role is a plot-level visual role that
                allows grouping data points to form a hierarchy.

                This is a shortcut property for the main plot's
                <c:link to="pvc.options.visualRoles.TreemapPlotVisualRoles#category" />.
            </c:documentation>
        </c:property>

        <c:property name="colorRole" type="string pvc.options.VisualRole" category="Chart > Visual Roles">
            <c:documentation>
                The <tt>color</tt> visual role is a plot-level visual role that
                is visually encoded by the color of visual elements.

                This is a shortcut property for the main plot's
                <c:link to="pvc.options.visualRoles.TreemapPlotVisualRoles#color" />.
            </c:documentation>
        </c:property>

        <c:property name="sizeRole" type="string pvc.options.VisualRole" category="Chart > Visual Roles">
            <c:documentation>
                The <tt>size</tt> visual role is a plot-level visual role that
                is visually encoded by the relative area amongst sibling-leaf rectangles.

                This is a shortcut property for the main plot's
                <c:link to="pvc.options.visualRoles.TreemapPlotVisualRoles#size" />.
            </c:documentation>
        </c:property>

        <c:property name="visualRoles"
                    type="map(string : pvc.options.VisualRole) pvc.options.visualRoles.TreemapChartVisualRoles"
                    category="Chart > Visual Roles">
            <c:documentation>
                The chart's visual roles map.

                See <c:link to="pvc.options.charts.BasicChart#visualRoles" /> for more information.
            </c:documentation>
        </c:property>

        <c:property name="color" type="pvc.options.axes.DiscreteColorAxis" category="Axes">
            <c:documentation>
                The first color axis options.

                This axis can also be accessed by the property name <tt>color</tt>.

                See <c:link to="pvc.options.axes.ColorAxis" />
                for more information on the way that
                the color axes' properties may be accessed.
            </c:documentation>
        </c:property>

        <c:property name="sizeAxis" type="pvc.options.axes.SizeAxis" category="Axes">
            <c:documentation>
                The size axis options.
            </c:documentation>
        </c:property>

        <c:property name="treemap" expandUse="optional" type="pvc.options.plots.TreemapPlot" category="Plots">
            <c:documentation>
                The treemap plot is the <b>main plot</b> of the treemap chart,
                which means that
                its properties may be used <i>without</i> the "treemap" property suffix.
            </c:documentation>
        </c:property>

        <c:property name="timeSeries" type="boolean" fixed="false" category="Chart > Data" level="basic">
            <c:documentation>
                This chart type does not support this property.
            </c:documentation>
        </c:property>

        <c:property name="timeSeriesFormat" type="string" fixed="null" category="Chart > Data" level="basic">
            <c:documentation>
                This chart type does not support this property.
            </c:documentation>
        </c:property>

        <c:property name="extensionPoints" type="pvc.options.ext.TreemapChartExtensionPoints" category="Chart" expandUse="optional">
            <c:documentation>
                The extension points object contains style definitions for
                the marks of the plot.
            </c:documentation>
        </c:property>
    </c:complexType>

    <c:complexType name="TreemapChartExtensionPoints"
                   space="pvc.options.ext"
                   use="expanded"
                   base="pvc.options.ext.ChartExtensionPoints"
                   facets="pvc.options.ext.MultiExtensionPointsFacet">
        <c:documentation>
            The extension points of the treemap chart type.

            Chart extension points can also be specified directly at the chart options level.

            To use an extension point you must find its full name, by joining:
            <ol>
                <li>extension property (ex: <tt>smallBase</tt>)</li>
                <li>the "_" character</li>
                <li>extension sub-property (ex: <tt>strokeStyle</tt>)</li>
            </ol>
            and obtaining, for the examples, the camel-cased name: <tt>smallBase_strokeStyle</tt>
            (see <c:link to="http://en.wikipedia.org/wiki/CamelCase" />).
        </c:documentation>
    </c:complexType>

    <c:complexType name="TreemapChartVisualRoles"
                   space="pvc.options.visualRoles"
                   base="pvc.options.visualRoles.BasicChartVisualRoles"
                   facets="pvc.options.visualRoles.MultiChartVisualRolesFacet"
                   use="literal">
        <c:documentation>
            The visual roles options class of the treemap chart type.
        </c:documentation>
    </c:complexType>

    <c:complexType name="TreemapPlot"
                   space="pvc.options.plots"
                   base="pvc.options.plots.Plot"
                   facets="pvc.options.plots.BasicMainPlotFacet"
                   use="expanded">
        <c:documentation>
            The options documentation class of the <b>Treemap</b> plot.
        </c:documentation>

        <c:property name="visualRoles"
                    type="map(string : pvc.options.VisualRole) pvc.options.visualRoles.TreemapPlotVisualRoles"
                    category="Visual Roles">
            <c:documentation>
                The plot's visual roles map.

                See <c:link to="pvc.options.plots.BasicPlot#visualRoles" /> for more information.
            </c:documentation>
        </c:property>

        <!-- TODO: maybe give meaning to this -->
        <c:property name="valuesAnchor" type="pvc.options.varia.MarkAnchor" fixed="null" category="Style">
            <c:documentation>
                The treemap's value label is always anchored to the center of the associated rectangle.
            </c:documentation>
        </c:property>

        <c:property name="valuesVisible" type="boolean" default="true" category="Style">
            <c:documentation>
                Indicates if value labels are shown next to the visual elements.
            </c:documentation>
        </c:property>

        <c:property name="valuesOptimizeLegibility" type="boolean" default="true" category="Style">
            <c:documentation>
                Indicates if legibility of value labels should be optimized.

                The current algorithm varies the text color so that it has enough contrast
                for the known background color.

                It is applied only when a value label is considered to be <i>inside</i> its
                associated rectangle. Presently, it is considered to be inside, if the center point
                of the label is within the bounds of the rectangle.
            </c:documentation>
        </c:property>

        <!-- Facet Override -->
        <c:property name="valuesOverflow" type="pvc.options.varia.ValuesOverflow" category="Style"
            default="'hide'">
            <c:documentation>
                The behavior to apply when the text of a value label does not fit within the bounds of its associated rectangle.

                This option applies only when <c:link to="pvc.options.plots.Plot#valuesVisible" /> is true.

                Moreover, it also applies only for certain configurations of value label placement,
                relative to the associated rectangle. Presently, the supported placements are:
                <ul>
                    <li><b>non-negative text margin</b>,
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textMargin" />.
                    </li>
                    <li><b>horizontal or vertical text</b> â€”
                        Text is horizontal when
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textAngle" />
                        is such that <tt>sin(textAngle) = 0</tt> (example: <tt>0</tt>).
                        Text is vertical when
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textAngle" />
                        is such that <tt>cos(textAngle) = 0</tt> (example: <tt>Math.PI/2</tt>, <tt>-Math.PI/2</tt>, <tt>3*Math.PI/2</tt>, ...).
                    </li>
                </ul>

                When an unsupported placement occurs, the label is shown.

                Note that for the purposes of hiding and trimming,
                the value of <c:link to="pvc.options.marks.LabelExtensionPoint#textMargin" />
                is used for more that the distance between the anchor points of the label and the rectangle.

                It is included as a required margin in all of the sides of the label.
            </c:documentation>
        </c:property>

        <c:property name="layoutMode" type="pvc.options.varia.TreemapLayoutMode" default="'squarify'" category="Style">
            <c:documentation>
                The rectangle layout algorithm.
            </c:documentation>
        </c:property>

        <c:property name="colorMode" type="pvc.options.varia.TreemapColorMode" default="'byParent'" category="Style">
            <c:documentation>
                Controls how colors are drawn from the color scale to paint visual elements.
                Indicates if the color is assigned to parent nodes or to leaf nodes.
            </c:documentation>
        </c:property>

        <c:property name="rootCategoryLabel" type="string" default="'All'" category="Style">
            <c:documentation>
                The label that is used for the root node.
                The root node's label not always shows up to the user.
                It depends on the used <c:link to="#colorMode"/> and
                of the existence of a first-level leaf node.
            </c:documentation>
        </c:property>

        <c:property name="extensionPoints" type="pvc.options.ext.TreemapPlotExtensionPoints" category="Style" expandUse="optional">
            <c:documentation>
                The extension points object
                contains style definitions for
                various visual elements of the chart.
            </c:documentation>
        </c:property>
    </c:complexType>

    <c:complexType name="TreemapPlotExtensionPoints" space="pvc.options.ext" use="expanded">
        <c:documentation>
            The extension points of the treemap plot type.

            Plot extension points can be specified:
            <ul>
                <li>at the plot level, in the <i>extensionPoints</i> property,
                    without need to prefix the extension point with the
                    plot id or name.
                </li>
                <li>at the plot options level, directly,
                    without need to prefix the extension point with the
                    plot id or name.
                </li>
                <li>
                    if it is an internal plot (<i>main</i>, <i>plot2</i> or <i>trend</i>),
                    at the chart options level, directly.
                </li>
            </ul>

            To use an extension point you must find its full name, by joining:
            <ol>
                <li>plot property name (ex: <tt>treemap</tt>)</li>
                <li>extension property (ex: <tt>leaf</tt>)</li>
                <li>the "_" character</li>
                <li>extension sub-property (ex: <tt>strokeStyle</tt>)</li>
            </ol>
            and obtaining, for the examples, the camel-cased name: <tt>treemapLeaf_strokeStyle</tt>
            (see <c:link to="http://en.wikipedia.org/wiki/CamelCase" />).

            The extension points of the <i>main plot</i> of a chart
            may be used without the plot property name prefix.
            In the example, when the <tt>treemap</tt> plot is the main plot,
            the extension point can be written as <tt>leaf_strokeStyle</tt>.
        </c:documentation>

        <c:property name="leaf" type="pvc.options.marks.BarExtensionPoint">
            <c:documentation>
                The extension point of the leaf rectangles.
            </c:documentation>
        </c:property>

        <c:property name="ascendant" type="pvc.options.marks.BarExtensionPoint">
            <c:documentation>
                The extension point of the non-leaf rectangles.
            </c:documentation>
        </c:property>

        <c:property name="label" type="pvc.options.marks.LabelExtensionPoint">
            <c:documentation>
                The extension point of the value label mark.
            </c:documentation>
        </c:property>

    </c:complexType>

    <c:complexType name="TreemapPlotVisualRoles"
                   space="pvc.options.visualRoles"
                   base="pvc.options.visualRoles.BasicPlotVisualRoles"
                   use="literal">
        <c:documentation>
            The visual roles options class of the treemap plot type.
        </c:documentation>

        <c:property name="category" type="string pvc.options.VisualRole" category="Visual Roles">
            <c:documentation>
                The <tt>category</tt> visual role is a plot-level visual role that
                allows grouping data points to form a hierarchy.

                The <tt>category</tt> visual role automatically binds to
                every dimension whose name has the <tt>category</tt> prefix.

                The visual role is required ad discrete.

                See <c:link to="pvc.options.VisualRole" />
                for more information on supported data types.
            </c:documentation>
        </c:property>

        <c:property name="color" type="string pvc.options.VisualRole" category="Visual Roles">
            <c:documentation>
                The <tt>color</tt> visual role is a plot-level visual role that
                is visually encoded by the color of visual elements.

                The <tt>color</tt> visual role automatically binds to
                every dimension whose name has the <tt>color</tt> prefix
                or, if none exists,
                the dimensions of the <tt>category</tt> role.

                The <tt>color</tt> visual role is optional and discrete.

                See <c:link to="pvc.options.VisualRole" />
                for more information on supported data types.
            </c:documentation>
        </c:property>

        <c:property name="size" type="string pvc.options.VisualRole" category="Visual Roles">
            <c:documentation>
                The <tt>size</tt> visual role is a plot-level visual role that
                is visually encoded by the relative area amongst sibling-leaf rectangles.

                The <tt>size</tt> visual role
                accepts zero or more numeric dimensions and
                automatically binds to a single numeric dimension whose name has the <tt>size</tt> prefix.

                When bound to more than one dimension,
                the special <tt>sizeRole.dim</tt> discriminator dimension can be used to control the behaviour:
                <ul>
                    <li>
                        Bind at least one of the discrete visual roles
                        <tt>multiChart</tt> or <tt>category</tt> to <tt>sizeRole.dim</tt>,
                        to make it that a single measure dimension is ultimately represented by plots.
                    </li>
                    <li>
                        Don't bind the <tt>sizeRole.dim</tt>, to any of the discrete visual roles,
                        to make the plots represent the <b>sum</b> of the measure dimensions.
                    </li>
                </ul>

                See <c:link to="pvc.options.VisualRole" />
                for more information on supported data types.
            </c:documentation>
        </c:property>
    </c:complexType>

</c:model>
