<?xml version="1.0" encoding="UTF-8"?>
<c:model
    xmlns:c="urn:webdetails/com/2012"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="urn:webdetails/com/2012 ../../schema/com_2012.xsd"
    xmlns="http://www.w3.org/1999/xhtml">

    <c:complexType name="PieChart"
                   space="pvc.options.charts"
                   base="pvc.options.charts.Chart"
                   facets="pvc.options.charts.MultiChartFacet">
        <c:documentation>
            The options documentation class of the <b>Pie</b> chart.

            For information on the supported <b>data formats</b>
            see <c:link to="pvc.options.charts.BasicChart" />.
        </c:documentation>

        <c:property name="categoryRole" type="string pvc.options.VisualRole" category="Chart > Visual Roles">
            <c:documentation>
                The <tt>category</tt> visual role is a plot-level visual role that
                represents the grouping of data by slices of the pie.

                This is a shortcut property for the main plot's
                <c:link to="pvc.options.visualRoles.PiePlotVisualRoles#category" />.
            </c:documentation>
        </c:property>

        <c:property name="colorRole" type="string pvc.options.VisualRole" category="Chart > Visual Roles">
            <c:documentation>
                The <tt>color</tt> visual role is a plot-level visual role that
                is visually encoded by the fill color of each pie slice.

                This is a shortcut property for the main plot's
                <c:link to="pvc.options.visualRoles.PiePlotVisualRoles#category" />.
            </c:documentation>
        </c:property>

        <c:property name="valueRole" type="string pvc.options.VisualRole" category="Chart > Visual Roles">
            <c:documentation>
                The <tt>value</tt> visual role is a plot-level visual role that
                represents the main measure under analysis,
                and is visually encoded by the
                relative angle span of each pie slice.

                This is a shortcut property for the main plot's
                <c:link to="pvc.options.visualRoles.PiePlotVisualRoles#value" />.
            </c:documentation>
        </c:property>

        <c:property name="visualRoles"
                    type="map(string : pvc.options.VisualRole) pvc.options.visualRoles.PieChartVisualRoles"
                    category="Chart > Visual Roles">
            <c:documentation>
                The chart's visual roles map.

                See <c:link to="pvc.options.charts.BasicChart#visualRoles" /> for more information.
            </c:documentation>
        </c:property>

        <c:property name="orientation" type="pvc.options.varia.ChartOrientation" fixed="'vertical'" category="Chart > Layout">
            <c:documentation>
                This chart type does not represent orientation.
            </c:documentation>
        </c:property>

        <c:property name="color" type="pvc.options.axes.DiscreteColorAxis" category="Axes">
            <c:documentation>
                The first color axis options.

                This axis can also be accessed by the property name <tt>color</tt>.

                See <c:link to="pvc.options.axes.ColorAxis" />
                for more information on the way that
                the color axes' properties may be accessed.
            </c:documentation>
        </c:property>

        <c:property name="pie" expandUse="optional" type="pvc.options.plots.PiePlot" category="Plots">
            <c:documentation>
                The pie plot is the <b>main plot</b> of the pie chart,
                which means that
                its properties may be used <i>without</i> the "pie" property suffix.
            </c:documentation>
        </c:property>

        <c:property name="innerGap" type="number" category="Chart > Layout">
            <c:documentation>
                <c:deprecated>
                    Use <c:link to="pvc.options.charts.BasicChart#contentPaddings" /> instead.
                </c:deprecated>
                The percentage size of the plot area that is
                occupied by the pie.

                An equivalent content paddings may be specified as:
                ((1 - innerGap) * 100 / 2 ) + "%";
            </c:documentation>
        </c:property>

        <c:property name="extensionPoints" type="pvc.options.ext.PieChartExtensionPoints" category="Chart" expandUse="optional">
            <c:documentation>
                The extension points object contains style definitions for
                the marks of the plot.
            </c:documentation>
        </c:property>
    </c:complexType>

    <c:complexType name="PieChartExtensionPoints"
                   space="pvc.options.ext"
                   use="expanded"
                   base="pvc.options.ext.ChartExtensionPoints"
                   facets="pvc.options.ext.MultiExtensionPointsFacet">
        <c:documentation>
            The extension points of the pie chart type.

            Chart extension points can also be specified directly at the chart options level.

            To use an extension point you must find its full name, by joining:
            <ol>
                <li>extension property (ex: <tt>smallBase</tt>)</li>
                <li>the "_" character</li>
                <li>extension sub-property (ex: <tt>strokeStyle</tt>)</li>
            </ol>
            and obtaining, for the examples, the camel-cased name: <tt>smallBase_strokeStyle</tt>
            (see <c:link to="http://en.wikipedia.org/wiki/CamelCase" />).
        </c:documentation>
    </c:complexType>

    <c:complexType name="PieChartVisualRoles"
                   space="pvc.options.visualRoles"
                   base="pvc.options.visualRoles.BasicChartVisualRoles"
                   facets="pvc.options.visualRoles.MultiChartVisualRolesFacet"
                   use="literal">
        <c:documentation>
            The visual roles options class of the pie chart type.
        </c:documentation>
    </c:complexType>

    <c:complexType name="PiePlot"
                   space="pvc.options.plots"
                   base="pvc.options.plots.Plot"
                   facets="pvc.options.plots.BasicMainPlotFacet"
                   use="expanded">
        <c:documentation>
            The options documentation class of the <b>Pie</b> plot.
        </c:documentation>

        <c:property name="visualRoles"
                    type="map(string : pvc.options.VisualRole) pvc.options.visualRoles.PiePlotVisualRoles"
                    category="Visual Roles">
            <c:documentation>
                The plot's visual roles map.

                See <c:link to="pvc.options.plots.BasicPlot#visualRoles" /> for more information.
            </c:documentation>
        </c:property>

        <c:property name="valuesAnchor" type="pvc.options.varia.WedgeAnchor" default="'outer'" category="Style">
            <c:documentation>
                The alignment of a value label
                relative to its corresponding visual element position.

                Specifically, this property applies to non-linked labels.
            </c:documentation>
        </c:property>

        <c:property name="valuesVisible" type="boolean" default="true" category="Style">
            <c:documentation>
                Indicates if value labels are shown next to the visual elements.
            </c:documentation>
        </c:property>

        <c:property name="valuesOptimizeLegibility" type="boolean" default="false" category="Style">
            <c:documentation>
                Indicates if legibility of value labels should be optimized.

                Only applies when <c:link to="#valuesLabelStyle" /> is <tt>inside</tt>.

                The current algorithm varies the text color so that it has enough contrast
                for the fill color of the associated pie slice.

                It is applied only when a value label is considered to be <i>inside</i> its
                associated slice. Presently, it is considered to be inside, if the center point
                of the label is within the bounds of the slice.
            </c:documentation>
        </c:property>

        <!-- Facet Override -->
        <c:property name="valuesOverflow" type="pvc.options.varia.ValuesOverflow" category="Style"
            default="'hide'">
            <c:documentation>
                The behavior to apply when the text of a value label does not fit within the bounds of its associated slice.

                This option applies only when <c:link to="pvc.options.plots.Plot#valuesVisible" /> is true.

                Moreover, it also applies only for certain configurations of value label placement,
                relative to the associated slice. Presently, the supported placements are:
                <ul>
                    <li><b>non-negative text margin</b>,
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textMargin" />.
                    </li>
                    <li><b>values anchor is outer</b> —
                        <c:link to="pvc.options.plots.Plot#valuesAnchor" />
                        is
                        <c:link to="pvc.options.varia.WedgeAnchor#Outer" />.
                    </li>
                    <li><b>text baseline is middle</b> —
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textBaseline" />
                        is
                        <c:link to="pvc.options.varia.TextBaseline#Middle" />.
                    </li>
                    <li><b>text is inside and aligned with the middle angle of the slice</b> —
                        if the label has a
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textAlign" />
                        of
                        <c:link to="pvc.options.varia.TextAlignment#Right" />,
                        then
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textAngle" />
                        must be (modulo) equal to the middle angle of the slice.

                        Otherwise,
                        if the label has a
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textAlign" />
                        of
                        <c:link to="pvc.options.varia.TextAlignment#Left" />,
                        then
                        <c:link to="pvc.options.marks.LabelExtensionPoint#textAngle" />
                        must be (modulo) equal to the middle angle of the slice plus <tt>PI</tt>
                        (the opposite angle).
                    </li>
                </ul>

                When an unsupported placement occurs, the label is shown.

                Note that for the purposes of hiding and trimming,
                the value of <c:link to="pvc.options.marks.LabelExtensionPoint#textMargin" />
                is used for more that the distance between the anchor points of the label and the slice.
                It is also included as a required margin at the opposite side of the
                configured text alignment.
                Also, half of the text margin is included on the bottom and top sides.
            </c:documentation>
        </c:property>

        <c:property name="activeSliceRadius" type="number string" default="'5%'" category="Layout">
            <c:documentation>
                Increment radius of an <i>active</i> slice,
                in pixel units or as a percentage.

                When the value is a string,
                and if it is suffixed with "%",
                it represents a percentage of the
                biggest radius that can fit in the client area of the plot.

                This property is only relevant if
                <c:link to="pvc.options.charts.Chart#hoverable" /> is <tt>true</tt>.

                The <i>normal</i> radius is
                the biggest radius that can fit in the client area of the plot
                minus the space occupied by linked labels,
                minus the resolved active radius and
                minus the resolved exploded radius.

                See <c:link to="#explodedSliceRadius" />.
            </c:documentation>
        </c:property>

        <c:property name="explodedSliceRadius" type="number string" default="0" category="Layout">
            <c:documentation>
                Increment radius of an <i>exploded</i> slice,
                in pixel units or as a percentage.

                When the value is a string,
                and if it is suffixed with "%",
                it represents a percentage of the
                biggest radius that can fit in the client area of the plot.

                The <i>normal</i> radius is
                the biggest radius that can fit in the client area of the plot
                minus the space occupied by linked labels,
                minus the resolved active radius and
                minus the resolved exploded radius.

                See <c:link to="#activeSliceRadius" /> and <c:link to="#explodedSliceIndex" />.
            </c:documentation>
        </c:property>

        <c:property name="explodedSliceIndex" type="number" default="null" category="Layout">
            <c:documentation>
                The index of the exploded slice,
                or <tt>null</tt>,
                for all slices to be exploded.

                The exploded slice or slices
                are shown exploded
                only when <c:link to="#explodedSliceRadius" />
                is greater than <tt>0</tt>.
            </c:documentation>
        </c:property>

        <c:property name="valuesMask" type="string" category="Layout">
            <c:documentation>
                The values mask used to build the text of value labels.

                The mask may contain scene variable names and/or scene atom names,
                like in the examples:
                <ul>
                    <li>scene variables: <tt>{category}: {value} EUR</tt>, could yield <tt>Drinks: 3.45 EUR</tt></li>
                    <li>atom variables:  <tt>{#family} - {#product}</tt>, could yield <tt>Plains - Boeing 747</tt></li>
                </ul>

                The default value depends on the label style:
                <ul>
                    <li><tt>inside</tt> - <tt>{value}</tt></li>
                    <li><tt>linked</tt> - <tt>{value} ({value.percent})</tt></li>
                </ul>

                The <tt>percent</tt> variable is a
                sub-variable of the <tt>value</tt> scene variable.
            </c:documentation>
        </c:property>

        <c:property name="valuesLabelStyle"
                    type="pvc.options.varia.PieValuesLabelStyle"
                    default="'linked'"
                    category="Layout">
            <c:documentation>
                The style used to place value labels.
            </c:documentation>
        </c:property>

        <c:property name="linkInsetRadius" type="number string" default="'5%'" category="Layout > Linked Labels">
            <c:documentation>
                The length of the link line segment that is
                inset into a slice,
                in pixel units, or as a percentage.

                When the value is a string,
                and if it is suffixed with "%",
                it represents a percentage of the
                biggest radius that can fit in the client area of the plot.
            </c:documentation>
        </c:property>

        <c:property name="linkOutsetRadius" type="number string" default="'2.5%'" category="Layout > Linked Labels">
            <c:documentation>
                The length of the link line segment that
                extends outwards from the slice,
                until it reaches the link line "elbow",
                in pixel units, or as a percentage.

                When the value is a string,
                and if it is suffixed with "%",
                it represents a percentage of the
                biggest radius that can fit in the client area of the plot.
            </c:documentation>
        </c:property>

        <c:property name="linkMargin" type="number string" default="'2.5%'" category="Layout > Linked Labels">
            <c:documentation>
                The width of the space
                that separates the label from
                the end of the line segment that starts in the link elbow,
                in pixel units, or as a percentage.

                The value of this property includes
                the size of the link line handle.

                When the value is a string,
                and if it is suffixed with "%",
                it represents a percentage of the
                <i>client width</i> of the plot.
            </c:documentation>
        </c:property>

        <c:property name="linkHandleWidth" type="number" default="0.5" category="Layout > Linked Labels">
            <c:documentation>
                The width of the link line handle width, in <i>em</i> units.

                The <i>handle</i> is
                the last segment of the link line,
                an horizontal line segment just before the label.
            </c:documentation>
        </c:property>

        <c:property name="linkLabelSize" type="number string" default="'15%'" category="Layout > Linked Labels">
            <c:documentation>
                The width of the columns reserved,
                on each side of the pie,
                for laying out the linked label marks.

                When the value is a string,
                and if it is suffixed with "%",
                it represents a percentage of the
                <i>client width</i> of the plot.
            </c:documentation>
        </c:property>

        <c:property name="linkLabelSpacingMin" type="number" default="0.5" category="Layout > Linked Labels">
            <c:documentation>
                The minimum vertical space between consecutive link labels,
                in <i>em</i> units.
            </c:documentation>
        </c:property>

        <c:property name="extensionPoints" type="pvc.options.ext.PiePlotExtensionPoints" category="Style" expandUse="optional">
            <c:documentation>
                The extension points object
                contains style definitions for
                various visual elements of the chart.
            </c:documentation>
        </c:property>
    </c:complexType>

    <c:complexType name="PiePlotExtensionPoints" space="pvc.options.ext" use="expanded">
        <c:documentation>
            The extension points of the pie plot type.

            Plot extension points can be specified:
            <ul>
                <li>at the plot level, in the <i>extensionPoints</i> property,
                    without need to prefix the extension point with the
                    plot id or name.
                </li>
                <li>at the plot options level, directly,
                    without need to prefix the extension point with the
                    plot id or name.
                </li>
                <li>
                    if it is an internal plot (<i>main</i>, <i>plot2</i> or <i>trend</i>),
                    at the chart options level, directly.
                </li>
            </ul>

            To use an extension point you must find its full name, by joining:
            <ol>
                <li>plot property name (ex: <tt>pie</tt>)</li>
                <li>extension property (ex: <tt>slice</tt>)</li>
                <li>the "_" character</li>
                <li>extension sub-property (ex: <tt>strokeStyle</tt>)</li>
            </ol>
            and obtaining, for the examples, the camel-cased name: <tt>pieSlice_strokeStyle</tt>
            (see <c:link to="http://en.wikipedia.org/wiki/CamelCase" />).

            The extension points of the <i>main plot</i> of a chart
            may be used without the plot property name prefix.
            In the example, when the <tt>pie</tt> plot is the main plot,
            the extension point can be written as <tt>slice_strokeStyle</tt>.
        </c:documentation>

        <c:property name="slice" type="pvc.options.marks.PieChartWedgeExtensionPoint">
            <c:documentation>
                The extension point of the pie slice - the wedge mark.
            </c:documentation>
        </c:property>

        <c:property name="label" type="pvc.options.marks.LabelExtensionPoint">
            <c:documentation>
                The extension point of the value label mark.
            </c:documentation>
        </c:property>

        <c:property name="linkLine" type="pvc.options.marks.LineExtensionPoint">
            <c:documentation>
                The extension point of the line mark that links the
                pie slices and the linked labels.
            </c:documentation>
        </c:property>

    </c:complexType>

    <c:complexType name="PieChartWedgeExtensionPoint"
                   space="pvc.options.marks"
                   base="pvc.options.marks.WedgeExtensionPoint">
        <c:documentation>
            The class of the Pie chart's protovis Wedge extension points.

            See the associated protovis documentation at
            <c:link to="http://mbostock.github.com/protovis/jsdoc/symbols/pv.Wedge.html" />.
        </c:documentation>

        <c:property name="offsetRadius" type="number string">
            <c:documentation>
                The offset radius of each slice, from the center of the pie,
                in <i>pixel</i> units or as a percentage of the outer radius.

                This extension point is only defined in
                the <i>pie</i> chart's wedge mark.

                The default implementation of this extension point
                honors the pie plot options
                <c:link to="pvc.options.plots.PiePlot#explodedSliceRadius" />
                and
                <c:link to="pvc.options.plots.PiePlot#explodedSliceIndex" />.

                The returned radius is kept within the interval:
                <tt>0</tt> and the total reserved "interaction" radius —
                the sum of
                <c:link to="pvc.options.plots.PiePlot#explodedSliceRadius" />
                and
                <c:link to="pvc.options.plots.PiePlot#activeSliceRadius" />.

                For example, this extension point can be used to
                show selected slices with an "exploded" style.
                This can be combined with the single selection mode.
            </c:documentation>
        </c:property>

        <c:property name="innerRadiusEx" type="number string">
            <c:documentation>
                The inner radius of each slice, in <i>pixel</i> units or as
                a percentage of the outer radius.

                This extension point is only defined in
                the <i>pie</i> chart's wedge mark.
            </c:documentation>
        </c:property>

    </c:complexType>

    <c:complexType name="PiePlotVisualRoles"
                   space="pvc.options.visualRoles"
                   base="pvc.options.visualRoles.BasicPlotVisualRoles"
                   use="literal">
        <c:documentation>
            The visual roles options class of the pie plot type.
        </c:documentation>

        <c:property name="category" type="string pvc.options.VisualRole" category="Visual Roles">
            <c:documentation>
                The <tt>category</tt> visual role is a plot-level visual role that
                represents the grouping of data by slices of the pie.

                The <tt>category</tt> visual role automatically binds to
                every dimension whose name has the <tt>category</tt> prefix.

                The visual role itself is optional,
                yet, when unbound,
                a dimension with a "category" prefix
                is automatically created for it,
                and all datums will have the value <tt>null</tt>
                in that dimension.

                See <c:link to="pvc.options.VisualRole" />
                for more information on supported data types.
            </c:documentation>
        </c:property>

        <c:property name="color" type="string pvc.options.VisualRole" category="Visual Roles">
            <c:documentation>
                The <tt>color</tt> visual role is a plot-level visual role that
                is visually encoded by the fill color of each pie slice.

                The <tt>color</tt> visual role automatically binds to
                every dimension whose name has the <tt>color</tt> prefix
                or, if none exists,
                the dimensions of the "category" role.

                The <tt>color</tt> visual role is discrete.

                See <c:link to="pvc.options.VisualRole" />
                for more information on supported data types.
            </c:documentation>
        </c:property>

        <c:property name="value" type="string pvc.options.VisualRole" category="Visual Roles">
            <c:documentation>
                The <tt>value</tt> visual role is a plot-level visual role that
                represents the main measure under analysis,
                and is visually encoded by the
                relative angle span of each pie slice.

                The <tt>value</tt> visual role
                accepts and requires one or more numeric dimensions and
                automatically binds to a single numeric dimension whose name has the <tt>value</tt> prefix.

                When bound to more than one dimension,
                the special <tt>valueRole.dim</tt> discriminator dimension can be used to control the behaviour:
                <ul>
                    <li>
                        Bind at least one of the discrete visual roles
                        <tt>multiChart</tt>, <tt>series</tt> or <tt>category</tt> to <tt>valueRole.dim</tt>,
                        to make it that a single measure dimension is ultimately represented by plots.
                    </li>
                    <li>
                        Don't bind the <tt>valueRole.dim</tt>, to any of the discrete visual roles,
                        to make the plots represent the <b>sum</b> of the measure dimensions.
                    </li>
                </ul>

                See <c:link to="pvc.options.VisualRole" />
                for more information on supported data types.
            </c:documentation>
        </c:property>

    </c:complexType>
</c:model>
